name: Release

on:
  push:
    tags:
      - 'v*.*.*'  # Run workflow on version tags, e.g. v1.0.0

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          
      - name: Build package
        run: python -m build
          
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: twine upload dist/*
        
  build-vsix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install VSCE
        run: npm install -g @vscode/vsce
        
      - name: Build VSIX
        run: |
          cd vscode-extension
          npm ci
          vsce package
          
      - name: Upload VSIX to release
        uses: softprops/action-gh-release@v1
        with:
          files: vscode-extension/*.vsix
          
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material mkdocstrings
          
      - name: Build documentation
        run: mkdocs build
        
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          
  build-spec:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Pandoc
        run: sudo apt-get install -y pandoc texlive-latex-base texlive-fonts-recommended
        
      - name: Build PDF Specification
        run: |
          mkdir -p output
          pandoc docs/spec.md -o output/ELFIN-spec-${{ github.ref_name }}.pdf --pdf-engine=xelatex
          
      - name: Upload Specification PDF to release
        uses: softprops/action-gh-release@v1
        with:
          files: output/ELFIN-spec-*.pdf
