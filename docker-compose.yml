version: '3.8'

services:
  # Main API Service
  tori-api:
    build: .
    container_name: tori-api
    ports:
      - "8001:8001"
    volumes:
      - ./models:/app/models
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - CUDA_VISIBLE_DEVICES=0
      - SAIGON_BASE_MODEL=/app/models/saigon_base
      - SAIGON_ADAPTERS_DIR=/app/models/adapters
      - SAIGON_MESH_DIR=/app/data/mesh_contexts
      - SAIGON_DEVICE=cuda
      - SAIGON_CACHE_SIZE=5
      - SAIGON_LOG_LEVEL=INFO
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped
    networks:
      - tori-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Service
  tori-frontend:
    build:
      context: ./frontend/hybrid
      dockerfile: Dockerfile
    container_name: tori-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - API_URL=http://tori-api:8001
    depends_on:
      - tori-api
    restart: unless-stopped
    networks:
      - tori-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: tori-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - tori-network

  # PostgreSQL for persistent storage (optional)
  postgres:
    image: postgres:15-alpine
    container_name: tori-postgres
    environment:
      - POSTGRES_DB=tori
      - POSTGRES_USER=tori_user
      - POSTGRES_PASSWORD=secure_password_here
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - tori-network

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: tori-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: unless-stopped
    networks:
      - tori-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: tori-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - tori-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: tori-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - tori-api
      - tori-frontend
    restart: unless-stopped
    networks:
      - tori-network

networks:
  tori-network:
    driver: bridge

volumes:
  redis-data:
  postgres-data:
  prometheus-data:
  grafana-data:
