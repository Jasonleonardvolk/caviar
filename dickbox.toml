# TORI/Saigon Dickbox Configuration
# ==================================
# Production deployment using dickbox container system

[container:tori-api]
image = "tori/saigon:latest"
type = "gpu"
ports = "8001:8001"
volumes = [
    "./models:/app/models",
    "./data:/app/data", 
    "./logs:/app/logs"
]
environment = {
    "CUDA_VISIBLE_DEVICES": "0",
    "SAIGON_BASE_MODEL": "/app/models/saigon_base",
    "SAIGON_ADAPTERS_DIR": "/app/models/adapters",
    "SAIGON_MESH_DIR": "/app/data/mesh_contexts",
    "SAIGON_DEVICE": "cuda",
    "SAIGON_CACHE_SIZE": "5",
    "SAIGON_LOG_LEVEL": "INFO"
}
resources = {
    "gpu": 1,
    "memory": "16G",
    "cpu": 4
}
restart = "unless-stopped"
healthcheck = {
    "test": "curl -f http://localhost:8001/health",
    "interval": "30s",
    "timeout": "10s",
    "retries": 3
}

[container:tori-frontend]
image = "tori/frontend:latest"
type = "standard"
ports = "3000:3000"
volumes = [
    "./frontend/hybrid:/app"
]
environment = {
    "NODE_ENV": "production",
    "API_URL": "http://tori-api:8001"
}
depends_on = ["tori-api"]
restart = "unless-stopped"

[container:redis]
image = "redis:7-alpine"
type = "standard"
ports = "6379:6379"
volumes = [
    "redis-data:/data"
]
restart = "unless-stopped"

[container:postgres]
image = "postgres:15-alpine"
type = "standard"
ports = "5432:5432"
environment = {
    "POSTGRES_DB": "tori",
    "POSTGRES_USER": "tori_user",
    "POSTGRES_PASSWORD": "secure_password_here"
}
volumes = [
    "postgres-data:/var/lib/postgresql/data"
]
restart = "unless-stopped"

[container:prometheus]
image = "prom/prometheus:latest"
type = "standard"
ports = "9090:9090"
volumes = [
    "./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml",
    "prometheus-data:/prometheus"
]
command = "--config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus"
restart = "unless-stopped"

[container:grafana]
image = "grafana/grafana:latest"
type = "standard"
ports = "3001:3000"
environment = {
    "GF_SECURITY_ADMIN_PASSWORD": "admin",
    "GF_INSTALL_PLUGINS": "redis-datasource"
}
volumes = [
    "grafana-data:/var/lib/grafana",
    "./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards"
]
depends_on = ["prometheus"]
restart = "unless-stopped"

[container:nginx]
image = "nginx:alpine"
type = "standard"
ports = [
    "80:80",
    "443:443"
]
volumes = [
    "./nginx/nginx.conf:/etc/nginx/nginx.conf",
    "./nginx/ssl:/etc/nginx/ssl"
]
depends_on = ["tori-api", "tori-frontend"]
restart = "unless-stopped"

[network]
name = "tori-network"
driver = "bridge"

[volumes]
redis-data = { type = "persistent" }
postgres-data = { type = "persistent" }
prometheus-data = { type = "persistent" }
grafana-data = { type = "persistent" }

[build:tori-api]
context = "."
dockerfile = "Dickboxfile"
tags = ["tori/saigon:latest"]

[build:tori-frontend]
context = "./frontend/hybrid"
dockerfile = "Dickboxfile.frontend"
tags = ["tori/frontend:latest"]
