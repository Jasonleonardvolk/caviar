name: ALAN Core Tests

on:
  push:
    branches: [ main, dev, feature/*, fix/* ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov hypothesis mypy flake8 black
        pip install -e .
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 alan_backend --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 alan_backend --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Type check with mypy
      run: |
        mypy --install-types --non-interactive alan_backend/core
    
    - name: Check formatting with black
      run: |
        black --check alan_backend
    
    - name: Test with pytest and coverage
      run: |
        pytest alan_backend/core/tests --cov=alan_backend.core --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  property-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install hypothesis pytest
        pip install -e .
    
    - name: Run property-based tests
      run: |
        pytest alan_backend/core/tests --hypothesis-show-statistics -v
    
  integration-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest fastapi uvicorn httpx
        pip install -e .
    
    - name: Run integration tests
      run: |
        # Start the FastAPI server in background (will be killed when job ends)
        python -m alan_backend.server.simulation_api &
        sleep 5
        
        # Run integration tests against the server
        pytest alan_backend/server/tests -v

  benchmark:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-benchmark
        pip install -e .
    
    - name: Run benchmarks
      run: |
        # Set OMP_NUM_THREADS=1 to prevent BLAS thread explosion
        export OMP_NUM_THREADS=1
        pytest alan_backend/core/tests/benchmark_*.py -v
    
    - name: Archive benchmark results
      uses: actions/upload-artifact@v3
      with:
        name: benchmark-results
        path: .benchmarks/
