{
  "timestamp": "2025-08-09T00:16:07.612Z",
  "directory": "C:\\Users\\jason\\Desktop\\tori\\kha\\frontend\\lib\\webgpu\\shaders",
  "deviceLimits": {
    "maxComputeInvocationsPerWorkgroup": 256,
    "maxComputeWorkgroupSizeX": 256,
    "maxComputeWorkgroupSizeY": 256,
    "maxComputeWorkgroupSizeZ": 64,
    "maxComputeWorkgroupStorageSize": 32768,
    "maxSampledTexturesPerShaderStage": 16,
    "maxSamplersPerShaderStage": 16,
    "label": "iphone15_profile_example"
  },
  "summary": {
    "total": 17,
    "passed": 16,
    "failed": 1,
    "warnings": 121,
    "fixed": 0
  },
  "shaders": [
    {
      "file": "frontend\\lib\\webgpu\\shaders\\avatarShader.wgsl",
      "hash": "d123a6c6",
      "size": 2557,
      "lines": 83,
      "timestamp": "2025-08-09T00:16:06.809Z",
      "errors": [],
      "warnings": [
        {
          "rule": "VEC3_STORAGE_ALIGNMENT",
          "line": 18,
          "message": "vec3 in storage buffer should be followed by padding or another vec3"
        },
        {
          "rule": "VEC3_STORAGE_ALIGNMENT",
          "line": 25,
          "message": "vec3 in storage buffer should be followed by padding or another vec3"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\bitReversal.wgsl",
      "hash": "c8648a10",
      "size": 1870,
      "lines": 60,
      "timestamp": "2025-08-09T00:16:06.837Z",
      "errors": [],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 55,
          "message": "Dynamic array access 'bit_reversal[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 58,
          "message": "Dynamic array access 'output[offset + j]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 58,
          "message": "Dynamic array access 'input[offset + i]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\butterflyStage.wgsl",
      "hash": "d94814fc",
      "size": 4833,
      "lines": 144,
      "timestamp": "2025-08-09T00:16:06.864Z",
      "errors": [],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 73,
          "message": "Dynamic array access 'twiddles[twiddle_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 76,
          "message": "Dynamic array access 'input[idx_a]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 77,
          "message": "Dynamic array access 'input[idx_b]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 83,
          "message": "Dynamic array access 'output[idx_a]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 84,
          "message": "Dynamic array access 'output[idx_b]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 120,
          "message": "Dynamic array access 'shared_data[local_idx * 2u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 120,
          "message": "Dynamic array access 'input[idx_a]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 121,
          "message": "Dynamic array access 'shared_data[local_idx * 2u + 1u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 121,
          "message": "Dynamic array access 'input[idx_b]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 126,
          "message": "Dynamic array access 'shared_data[local_idx * 2u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 127,
          "message": "Dynamic array access 'shared_data[local_idx * 2u + 1u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 130,
          "message": "Dynamic array access 'twiddles[twiddle_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 134,
          "message": "Dynamic array access 'output[idx_a]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 135,
          "message": "Dynamic array access 'output[idx_b]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\fftShift.wgsl",
      "hash": "c5f72546",
      "size": 1175,
      "lines": 46,
      "timestamp": "2025-08-09T00:16:06.890Z",
      "errors": [],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 34,
          "message": "Dynamic array access 'output[batch * N2 + j]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 34,
          "message": "Dynamic array access 'input[batch * N2 + i]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\hybridWavefieldBlend.wgsl",
      "hash": "c194ebb9",
      "size": 671,
      "lines": 23,
      "timestamp": "2025-08-09T00:16:06.918Z",
      "errors": [],
      "warnings": [],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\lenticularInterlace.wgsl",
      "hash": "240576d3",
      "size": 16153,
      "lines": 458,
      "timestamp": "2025-08-09T00:16:06.946Z",
      "errors": [],
      "warnings": [],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\lightFieldComposer.wgsl",
      "hash": "b2eeaa40",
      "size": 4964,
      "lines": 99,
      "timestamp": "2025-08-09T00:16:06.995Z",
      "errors": [],
      "warnings": [],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\multiDepthWaveSynth.wgsl",
      "hash": "6641d98f",
      "size": 3740,
      "lines": 79,
      "timestamp": "2025-08-09T00:16:07.022Z",
      "errors": [],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 42,
          "message": "Dynamic array access 'inputWave[idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 43,
          "message": "Dynamic array access 'inputWave[idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 57,
          "message": "Dynamic array access 'depths[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 77,
          "message": "Dynamic array access 'outputWave[idx]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\multiViewSynthesis.wgsl",
      "hash": "6b06d794",
      "size": 16124,
      "lines": 394,
      "timestamp": "2025-08-09T00:16:07.049Z",
      "errors": [],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 151,
          "message": "Dynamic array access 'shared_field_r[shared_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 152,
          "message": "Dynamic array access 'shared_field_g[shared_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 153,
          "message": "Dynamic array access 'shared_field_b[shared_idx]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\normalize.wgsl",
      "hash": "357fe12f",
      "size": 1130,
      "lines": 39,
      "timestamp": "2025-08-09T00:16:07.107Z",
      "errors": [],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 36,
          "message": "Dynamic array access 'input[idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 37,
          "message": "Dynamic array access 'output[idx]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\phaseOcclusion.wgsl",
      "hash": "4865eed9",
      "size": 2823,
      "lines": 62,
      "timestamp": "2025-08-09T00:16:07.145Z",
      "errors": [],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 25,
          "message": "Dynamic array access 'inputWave[idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 26,
          "message": "Dynamic array access 'inputWave[idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 28,
          "message": "Dynamic array access 'occlusion[idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 31,
          "message": "Dynamic array access 'occlusion[idx + 1u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 32,
          "message": "Dynamic array access 'occlusion[idx - 1u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 33,
          "message": "Dynamic array access 'occlusion[idx + w]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 34,
          "message": "Dynamic array access 'occlusion[idx - w]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 49,
          "message": "Dynamic array access 'outputWave[idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 59,
          "message": "Dynamic array access 'outputWave[idx]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\propagation.wgsl",
      "hash": "0726766e",
      "size": 19838,
      "lines": 502,
      "timestamp": "2025-08-09T00:16:07.183Z",
      "errors": [],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 282,
          "message": "Dynamic array access 'shared_transfer[local_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 381,
          "message": "Dynamic array access 'wavelengths[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 382,
          "message": "Dynamic array access 'spectral_weights[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 421,
          "message": "Dynamic array access 'wavelengths[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 422,
          "message": "Dynamic array access 'spectral_weights[i]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\topologicalOverlay.wgsl",
      "hash": "c0a05e8c",
      "size": 9696,
      "lines": 311,
      "timestamp": "2025-08-09T00:16:07.252Z",
      "errors": [
        {
          "rule": "NAGA_VALIDATION",
          "message": "[ERROR naga::valid::expression] Left: FunctionArgument(0) of type Vector { size: Tri, scalar: Scalar { kind: Float, width: 4 } }\n[ERROR naga::valid::expression] Right: AccessIndex { base: [14], index: 0 } of type Vector { size: Quad, scalar: Scalar { kind: Float, width: 4 } }\n\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[1m: Function [0] 'calculateChargeDensity' is invalid\u001b[0m\n   \u001b[0m\u001b[36m┌─\u001b[0m .temp_topologicalOverlay.wgsl:56:1\n   \u001b[0m\u001b[36m│\u001b[0m  \n\u001b[0m\u001b[36m56\u001b[0m \u001b[0m\u001b[36m│\u001b[0m \u001b[0m\u001b[31m╭\u001b[0m \u001b[0m\u001b[31mfn calculateChargeDensity(worldPos: vec3<f32>) -> f32 {\u001b[0m\n\u001b[0m\u001b[36m57\u001b[0m \u001b[0m\u001b[36m│\u001b[0m \u001b[0m\u001b[31m│\u001b[0m \u001b[0m\u001b[31m    var totalCharge = 0.0;\u001b[0m\n\u001b[0m\u001b[36m58\u001b[0m \u001b[0m\u001b[36m│\u001b[0m \u001b[0m\u001b[31m│\u001b[0m \u001b[0m\u001b[31m    let count = min(chargeCount, 1000u); // Safety limit\u001b[0m\n\u001b[0m\u001b[36m59\u001b[0m \u001b[0m\u001b[36m│\u001b[0m \u001b[0m\u001b[31m│\u001b[0m \u001b[0m\u001b[31m    \u001b[0m\n   \u001b[0m\u001b[36m·\u001b[0m \u001b[0m\u001b[31m│\u001b[0m\n\u001b[0m\u001b[36m62\u001b[0m \u001b[0m\u001b[36m│\u001b[0m \u001b[0m\u001b[31m│\u001b[0m \u001b[0m\u001b[31m        let distance = length(worldPos - charge.position);\u001b[0m\n   \u001b[0m\u001b[36m│\u001b[0m \u001b[0m\u001b[31m│\u001b[0m                               \u001b[0m\u001b[31m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m \u001b[0m\u001b[31mnaga::ir::Expression [16]\u001b[0m\n   \u001b[0m\u001b[36m·\u001b[0m \u001b[0m\u001b[31m│\u001b[0m\n\u001b[0m\u001b[36m72\u001b[0m \u001b[0m\u001b[36m│\u001b[0m \u001b[0m\u001b[31m│\u001b[0m \u001b[0m\u001b[31m    \u001b[0m\n\u001b[0m\u001b[36m73\u001b[0m \u001b[0m\u001b[36m│\u001b[0m \u001b[0m\u001b[31m│\u001b[0m \u001b[0m\u001b[31m    return totalCharge;\u001b[0m\n   \u001b[0m\u001b[36m│\u001b[0m \u001b[0m\u001b[31m╰\u001b[0m\u001b[0m\u001b[31m───────────────────────^ naga::ir::Function [0]\u001b[0m\n   \u001b[0m\u001b[36m│\u001b[0m  \n   \u001b[0m\u001b[36m=\u001b[0m Expression [16] is invalid\n   \u001b[0m\u001b[36m=\u001b[0m Operation Subtract can't work with [0] (of type Vector { size: Tri, scalar: Scalar { kind: Float, width: 4 } }) and [15] (of type Vector { size: Quad, scalar: Scalar { kind: Float, width: 4 } })\n\n"
        }
      ],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 61,
          "message": "Dynamic array access 'charges[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 83,
          "message": "Dynamic array access 'charges[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 106,
          "message": "Dynamic array access 'charges[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 126,
          "message": "Dynamic array access 'charges[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 268,
          "message": "Dynamic array access 'charges[index]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 290,
          "message": "Dynamic array access 'charges[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 309,
          "message": "Dynamic array access 'charges[index]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\transpose.wgsl",
      "hash": "4b0cdbfb",
      "size": 5290,
      "lines": 149,
      "timestamp": "2025-08-09T00:16:07.332Z",
      "errors": [],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 52,
          "message": "Dynamic array access 'tile[local_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 52,
          "message": "Dynamic array access 'input[idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 55,
          "message": "Dynamic array access 'tile[local_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 70,
          "message": "Dynamic array access 'output[transposed_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 70,
          "message": "Dynamic array access 'tile[transposed_local]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 97,
          "message": "Dynamic array access 'tile[shared_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 97,
          "message": "Dynamic array access 'input[idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 111,
          "message": "Dynamic array access 'output[transposed_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 111,
          "message": "Dynamic array access 'tile[shared_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 134,
          "message": "Dynamic array access 'input[idx1]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 135,
          "message": "Dynamic array access 'output[idx1]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 135,
          "message": "Dynamic array access 'input[idx2]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 136,
          "message": "Dynamic array access 'output[idx2]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\velocityField.wgsl",
      "hash": "e49c24f2",
      "size": 14972,
      "lines": 422,
      "timestamp": "2025-08-09T00:16:07.383Z",
      "errors": [],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 82,
          "message": "Dynamic array access 'shared_wavefield[shared_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 93,
          "message": "Dynamic array access 'shared_wavefield[idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 94,
          "message": "Dynamic array access 'shared_wavefield[idx - 1u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 95,
          "message": "Dynamic array access 'shared_wavefield[idx + 1u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 96,
          "message": "Dynamic array access 'shared_wavefield[idx - 10u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 97,
          "message": "Dynamic array access 'shared_wavefield[idx + 10u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 124,
          "message": "Dynamic array access 'spatial_freqs[packed_idx0]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 125,
          "message": "Dynamic array access 'spatial_freqs[packed_idx1]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 192,
          "message": "Dynamic array access 'phases[i / 4u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 228,
          "message": "Dynamic array access 'shared_wavefield[idx - 1u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 229,
          "message": "Dynamic array access 'shared_wavefield[idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 230,
          "message": "Dynamic array access 'shared_wavefield[idx + 1u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 234,
          "message": "Dynamic array access 'shared_wavefield[idx - 10u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 235,
          "message": "Dynamic array access 'shared_wavefield[idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 236,
          "message": "Dynamic array access 'shared_wavefield[idx + 10u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 300,
          "message": "Dynamic array access 'particles[idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 368,
          "message": "Dynamic array access 'particles[idx]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\wavefieldEncoder.wgsl",
      "hash": "d4a01f73",
      "size": 9738,
      "lines": 279,
      "timestamp": "2025-08-09T00:16:07.455Z",
      "errors": [],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 97,
          "message": "Dynamic array access 'shared_spatial_freqs[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 97,
          "message": "Dynamic array access 'spatial_freqs[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 98,
          "message": "Dynamic array access 'shared_phases[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 98,
          "message": "Dynamic array access 'phases[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 99,
          "message": "Dynamic array access 'shared_amplitudes[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 99,
          "message": "Dynamic array access 'amplitudes[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 112,
          "message": "Dynamic array access 'shared_spatial_freqs[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 113,
          "message": "Dynamic array access 'shared_spatial_freqs[i + 1u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 114,
          "message": "Dynamic array access 'shared_spatial_freqs[i + 2u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 115,
          "message": "Dynamic array access 'shared_spatial_freqs[i + 3u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 117,
          "message": "Dynamic array access 'shared_phases[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 118,
          "message": "Dynamic array access 'shared_phases[i + 1u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 119,
          "message": "Dynamic array access 'shared_phases[i + 2u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 120,
          "message": "Dynamic array access 'shared_phases[i + 3u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 122,
          "message": "Dynamic array access 'shared_amplitudes[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 123,
          "message": "Dynamic array access 'shared_amplitudes[i + 1u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 124,
          "message": "Dynamic array access 'shared_amplitudes[i + 2u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 125,
          "message": "Dynamic array access 'shared_amplitudes[i + 3u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 174,
          "message": "Dynamic array access 'dispersion_factors[channel % 3u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 176,
          "message": "Dynamic array access 'phases[phase_idx]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\wavefieldEncoder_optimized.wgsl",
      "hash": "2fec729a",
      "size": 9748,
      "lines": 278,
      "timestamp": "2025-08-09T00:16:07.541Z",
      "errors": [],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 97,
          "message": "Dynamic array access 'shared_spatial_freqs[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 97,
          "message": "Dynamic array access 'spatial_freqs[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 98,
          "message": "Dynamic array access 'shared_phases[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 98,
          "message": "Dynamic array access 'phases[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 99,
          "message": "Dynamic array access 'shared_amplitudes[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 99,
          "message": "Dynamic array access 'amplitudes[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 112,
          "message": "Dynamic array access 'shared_spatial_freqs[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 113,
          "message": "Dynamic array access 'shared_spatial_freqs[i + 1u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 114,
          "message": "Dynamic array access 'shared_spatial_freqs[i + 2u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 115,
          "message": "Dynamic array access 'shared_spatial_freqs[i + 3u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 117,
          "message": "Dynamic array access 'shared_phases[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 118,
          "message": "Dynamic array access 'shared_phases[i + 1u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 119,
          "message": "Dynamic array access 'shared_phases[i + 2u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 120,
          "message": "Dynamic array access 'shared_phases[i + 3u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 122,
          "message": "Dynamic array access 'shared_amplitudes[i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 123,
          "message": "Dynamic array access 'shared_amplitudes[i + 1u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 124,
          "message": "Dynamic array access 'shared_amplitudes[i + 2u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 125,
          "message": "Dynamic array access 'shared_amplitudes[i + 3u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 174,
          "message": "Dynamic array access 'dispersion_factors[channel % 3u]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 176,
          "message": "Dynamic array access 'phases[phase_idx]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    }
  ]
}