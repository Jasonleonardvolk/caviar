{
  "timestamp": "2025-08-09T01:25:54.423Z",
  "directory": "C:\\Users\\jason\\Desktop\\tori\\kha\\frontend\\lib\\webgpu\\shaders",
  "deviceLimits": {
    "maxComputeInvocationsPerWorkgroup": 256,
    "maxComputeWorkgroupSizeX": 256,
    "maxComputeWorkgroupSizeY": 256,
    "maxComputeWorkgroupSizeZ": 64,
    "maxComputeWorkgroupStorageSize": 32768,
    "maxSampledTexturesPerShaderStage": 16,
    "maxSamplersPerShaderStage": 16,
    "label": "iphone15_profile_example"
  },
  "summary": {
    "total": 17,
    "passed": 17,
    "failed": 0,
    "warnings": 121,
    "fixed": 0
  },
  "shaders": [
    {
      "file": "frontend\\lib\\webgpu\\shaders\\avatarShader.wgsl",
      "hash": "d123a6c6",
      "size": 2557,
      "lines": 83,
      "timestamp": "2025-08-09T01:25:53.320Z",
      "errors": [],
      "warnings": [
        {
          "rule": "VEC3_STORAGE_ALIGNMENT",
          "line": 18,
          "message": "vec3 in storage buffer should be followed by padding or another vec3"
        },
        {
          "rule": "VEC3_STORAGE_ALIGNMENT",
          "line": 25,
          "message": "vec3 in storage buffer should be followed by padding or another vec3"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\bitReversal.wgsl",
      "hash": "7ca05473",
      "size": 2126,
      "lines": 65,
      "timestamp": "2025-08-09T01:25:53.371Z",
      "errors": [],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 60,
          "message": "Dynamic array access 'bit_reversal[clamp_index_dyn(i, arrayLength(&bit_reversal))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 63,
          "message": "Dynamic array access 'output[clamp_index_dyn(offset + j, arrayLength(&output))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 63,
          "message": "Dynamic array access 'input[clamp_index_dyn(offset + i, arrayLength(&input))]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\butterflyStage.wgsl",
      "hash": "8ab44cc9",
      "size": 5606,
      "lines": 160,
      "timestamp": "2025-08-09T01:25:53.431Z",
      "errors": [],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 76,
          "message": "Dynamic array access 'twiddles[clamp_index_dyn(twiddle_idx, arrayLength(&twiddles))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 79,
          "message": "Dynamic array access 'input[clamp_index_dyn(idx_a, arrayLength(&input))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 80,
          "message": "Dynamic array access 'input[clamp_index_dyn(idx_b, arrayLength(&input))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 86,
          "message": "Dynamic array access 'output[clamp_index_dyn(idx_a, arrayLength(&output))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 87,
          "message": "Dynamic array access 'output[clamp_index_dyn(idx_b, arrayLength(&output))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 127,
          "message": "Dynamic array access 'shared_data[shared_idx_a]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 127,
          "message": "Dynamic array access 'input[clamp_index_dyn(idx_a, arrayLength(&input))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 130,
          "message": "Dynamic array access 'shared_data[shared_idx_b]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 130,
          "message": "Dynamic array access 'input[clamp_index_dyn(idx_b, arrayLength(&input))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 140,
          "message": "Dynamic array access 'shared_data[shared_idx_a]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 143,
          "message": "Dynamic array access 'shared_data[shared_idx_b]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 147,
          "message": "Dynamic array access 'twiddles[clamp_index_dyn(twiddle_idx, arrayLength(&twiddles))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 151,
          "message": "Dynamic array access 'output[clamp_index_dyn(idx_a, arrayLength(&output))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 152,
          "message": "Dynamic array access 'output[clamp_index_dyn(idx_b, arrayLength(&output))]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\fftShift.wgsl",
      "hash": "0f9ef0e2",
      "size": 1344,
      "lines": 51,
      "timestamp": "2025-08-09T01:25:53.488Z",
      "errors": [],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 39,
          "message": "Dynamic array access 'output[clamp_index_dyn(batch * N2 + j, arrayLength(&output))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 39,
          "message": "Dynamic array access 'input[clamp_index_dyn(batch * N2 + i, arrayLength(&input))]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\hybridWavefieldBlend.wgsl",
      "hash": "c194ebb9",
      "size": 671,
      "lines": 23,
      "timestamp": "2025-08-09T01:25:53.541Z",
      "errors": [],
      "warnings": [],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\lenticularInterlace.wgsl",
      "hash": "240576d3",
      "size": 16153,
      "lines": 458,
      "timestamp": "2025-08-09T01:25:53.587Z",
      "errors": [],
      "warnings": [],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\lightFieldComposer.wgsl",
      "hash": "b2eeaa40",
      "size": 4964,
      "lines": 99,
      "timestamp": "2025-08-09T01:25:53.670Z",
      "errors": [],
      "warnings": [],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\multiDepthWaveSynth.wgsl",
      "hash": "4a845493",
      "size": 3997,
      "lines": 87,
      "timestamp": "2025-08-09T01:25:53.727Z",
      "errors": [],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 48,
          "message": "Dynamic array access 'inputWave[clamped_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 49,
          "message": "Dynamic array access 'inputWave[clamped_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 65,
          "message": "Dynamic array access 'depths[depth_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 85,
          "message": "Dynamic array access 'outputWave[clamp_index_dyn(idx, arrayLength(&outputWave))]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\multiViewSynthesis.wgsl",
      "hash": "53f35554",
      "size": 16387,
      "lines": 401,
      "timestamp": "2025-08-09T01:25:53.787Z",
      "errors": [],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 158,
          "message": "Dynamic array access 'shared_field_r[clamped_shared_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 159,
          "message": "Dynamic array access 'shared_field_g[clamped_shared_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 160,
          "message": "Dynamic array access 'shared_field_b[clamped_shared_idx]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\normalize.wgsl",
      "hash": "24eac101",
      "size": 1299,
      "lines": 44,
      "timestamp": "2025-08-09T01:25:53.868Z",
      "errors": [],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 41,
          "message": "Dynamic array access 'input[clamp_index_dyn(idx, arrayLength(&input))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 42,
          "message": "Dynamic array access 'output[clamp_index_dyn(idx, arrayLength(&output))]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\phaseOcclusion.wgsl",
      "hash": "5df995dd",
      "size": 3350,
      "lines": 83,
      "timestamp": "2025-08-09T01:25:53.924Z",
      "errors": [],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 32,
          "message": "Dynamic array access 'inputWave[clamped_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 33,
          "message": "Dynamic array access 'inputWave[clamped_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 36,
          "message": "Dynamic array access 'occlusion[clamp_index_dyn(idx, arrayLength(&occlusion))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 41,
          "message": "Dynamic array access 'occlusion[clamp_index_dyn(idx + 1u, arrayLength(&occlusion))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 44,
          "message": "Dynamic array access 'occlusion[clamp_index_dyn(idx - 1u, arrayLength(&occlusion))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 47,
          "message": "Dynamic array access 'occlusion[clamp_index_dyn(idx + w, arrayLength(&occlusion))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 50,
          "message": "Dynamic array access 'occlusion[clamp_index_dyn(idx - w, arrayLength(&occlusion))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 70,
          "message": "Dynamic array access 'outputWave[output_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 80,
          "message": "Dynamic array access 'outputWave[output_idx]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\propagation.wgsl",
      "hash": "0d02d6e1",
      "size": 21028,
      "lines": 541,
      "timestamp": "2025-08-09T01:25:53.975Z",
      "errors": [],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 289,
          "message": "Dynamic array access 'shared_transfer[local_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 389,
          "message": "Dynamic array access 'wavelengths[clamp_index_dyn(i, arrayLength(&wavelengths))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 390,
          "message": "Dynamic array access 'spectral_weights[clamp_index_dyn(i, arrayLength(&spectral_weights))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 429,
          "message": "Dynamic array access 'wavelengths[clamp_index_dyn(i, arrayLength(&wavelengths))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 430,
          "message": "Dynamic array access 'spectral_weights[clamp_index_dyn(i, arrayLength(&spectral_weights))]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\topologicalOverlay.wgsl",
      "hash": "2c4edd3b",
      "size": 10181,
      "lines": 322,
      "timestamp": "2025-08-09T01:25:54.055Z",
      "errors": [],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 67,
          "message": "Dynamic array access 'charges[charge_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 90,
          "message": "Dynamic array access 'charges[charge_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 114,
          "message": "Dynamic array access 'charges[charge_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 135,
          "message": "Dynamic array access 'charges[charge_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 278,
          "message": "Dynamic array access 'charges[charge_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 301,
          "message": "Dynamic array access 'charges[other_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 320,
          "message": "Dynamic array access 'charges[charge_idx]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\transpose.wgsl",
      "hash": "8f37c443",
      "size": 5951,
      "lines": 163,
      "timestamp": "2025-08-09T01:25:54.139Z",
      "errors": [],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 58,
          "message": "Dynamic array access 'tile[local_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 58,
          "message": "Dynamic array access 'input[clamp_index_dyn(idx, arrayLength(&input))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 61,
          "message": "Dynamic array access 'tile[local_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 77,
          "message": "Dynamic array access 'output[clamp_index_dyn(transposed_idx, arrayLength(&output))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 77,
          "message": "Dynamic array access 'tile[transposed_local]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 106,
          "message": "Dynamic array access 'tile[shared_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 106,
          "message": "Dynamic array access 'input[clamp_index_dyn(idx, arrayLength(&input))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 122,
          "message": "Dynamic array access 'output[clamp_index_dyn(transposed_idx, arrayLength(&output))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 122,
          "message": "Dynamic array access 'tile[shared_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 148,
          "message": "Dynamic array access 'input[clamped_idx1]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 149,
          "message": "Dynamic array access 'output[clamp_index_dyn(idx1, arrayLength(&output))]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 149,
          "message": "Dynamic array access 'input[clamped_idx2]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 150,
          "message": "Dynamic array access 'output[clamp_index_dyn(idx2, arrayLength(&output))]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\velocityField.wgsl",
      "hash": "c9c69206",
      "size": 16327,
      "lines": 451,
      "timestamp": "2025-08-09T01:25:54.196Z",
      "errors": [],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 88,
          "message": "Dynamic array access 'shared_wavefield[shared_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 114,
          "message": "Dynamic array access 'shared_wavefield[clamp_index_dyn(idx, SHARED_SIZE)]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 115,
          "message": "Dynamic array access 'shared_wavefield[clamp_index_dyn(idx_left, SHARED_SIZE)]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 116,
          "message": "Dynamic array access 'shared_wavefield[clamp_index_dyn(idx_right, SHARED_SIZE)]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 117,
          "message": "Dynamic array access 'shared_wavefield[clamp_index_dyn(idx_down, SHARED_SIZE)]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 118,
          "message": "Dynamic array access 'shared_wavefield[clamp_index_dyn(idx_up, SHARED_SIZE)]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 145,
          "message": "Dynamic array access 'spatial_freqs[packed_idx0]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 146,
          "message": "Dynamic array access 'spatial_freqs[packed_idx1]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 215,
          "message": "Dynamic array access 'phases[phase_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 256,
          "message": "Dynamic array access 'shared_wavefield[clamp_index_dyn(idx - 1u, SHARED_SIZE)]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 257,
          "message": "Dynamic array access 'shared_wavefield[clamp_index_dyn(idx, SHARED_SIZE)]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 258,
          "message": "Dynamic array access 'shared_wavefield[clamp_index_dyn(idx + 1u, SHARED_SIZE)]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 262,
          "message": "Dynamic array access 'shared_wavefield[clamp_index_dyn(idx - 10u, SHARED_SIZE)]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 263,
          "message": "Dynamic array access 'shared_wavefield[clamp_index_dyn(idx, SHARED_SIZE)]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 264,
          "message": "Dynamic array access 'shared_wavefield[clamp_index_dyn(idx + 10u, SHARED_SIZE)]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 329,
          "message": "Dynamic array access 'particles[clamped_idx]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 397,
          "message": "Dynamic array access 'particles[clamped_idx]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\wavefieldEncoder.wgsl",
      "hash": "e1ada484",
      "size": 10278,
      "lines": 290,
      "timestamp": "2025-08-09T01:25:54.279Z",
      "errors": [],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 103,
          "message": "Dynamic array access 'shared_spatial_freqs[clamped_i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 103,
          "message": "Dynamic array access 'spatial_freqs[clamped_i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 104,
          "message": "Dynamic array access 'shared_phases[clamped_i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 104,
          "message": "Dynamic array access 'phases[clamped_i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 105,
          "message": "Dynamic array access 'shared_amplitudes[clamped_i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 105,
          "message": "Dynamic array access 'amplitudes[clamped_i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 124,
          "message": "Dynamic array access 'shared_spatial_freqs[idx0]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 125,
          "message": "Dynamic array access 'shared_spatial_freqs[idx1]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 126,
          "message": "Dynamic array access 'shared_spatial_freqs[idx2]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 127,
          "message": "Dynamic array access 'shared_spatial_freqs[idx3]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 129,
          "message": "Dynamic array access 'shared_phases[idx0]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 130,
          "message": "Dynamic array access 'shared_phases[idx1]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 131,
          "message": "Dynamic array access 'shared_phases[idx2]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 132,
          "message": "Dynamic array access 'shared_phases[idx3]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 134,
          "message": "Dynamic array access 'shared_amplitudes[idx0]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 135,
          "message": "Dynamic array access 'shared_amplitudes[idx1]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 136,
          "message": "Dynamic array access 'shared_amplitudes[idx2]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 137,
          "message": "Dynamic array access 'shared_amplitudes[idx3]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 186,
          "message": "Dynamic array access 'dispersion_factors[clamp_index_dyn(channel % 3u, 3u)]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 188,
          "message": "Dynamic array access 'phases[phase_idx]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    },
    {
      "file": "frontend\\lib\\webgpu\\shaders\\wavefieldEncoder_optimized.wgsl",
      "hash": "a0820c7b",
      "size": 10300,
      "lines": 290,
      "timestamp": "2025-08-09T01:25:54.358Z",
      "errors": [],
      "warnings": [
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 103,
          "message": "Dynamic array access 'shared_spatial_freqs[clamped_i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 103,
          "message": "Dynamic array access 'spatial_freqs[clamped_i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 104,
          "message": "Dynamic array access 'shared_phases[clamped_i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 104,
          "message": "Dynamic array access 'phases[clamped_i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 105,
          "message": "Dynamic array access 'shared_amplitudes[clamped_i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 105,
          "message": "Dynamic array access 'amplitudes[clamped_i]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 124,
          "message": "Dynamic array access 'shared_spatial_freqs[idx0]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 125,
          "message": "Dynamic array access 'shared_spatial_freqs[idx1]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 126,
          "message": "Dynamic array access 'shared_spatial_freqs[idx2]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 127,
          "message": "Dynamic array access 'shared_spatial_freqs[idx3]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 129,
          "message": "Dynamic array access 'shared_phases[idx0]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 130,
          "message": "Dynamic array access 'shared_phases[idx1]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 131,
          "message": "Dynamic array access 'shared_phases[idx2]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 132,
          "message": "Dynamic array access 'shared_phases[idx3]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 134,
          "message": "Dynamic array access 'shared_amplitudes[idx0]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 135,
          "message": "Dynamic array access 'shared_amplitudes[idx1]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 136,
          "message": "Dynamic array access 'shared_amplitudes[idx2]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 137,
          "message": "Dynamic array access 'shared_amplitudes[idx3]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 186,
          "message": "Dynamic array access 'dispersion_factors[clamp_index_dyn(channel % 3u, 3u)]' without apparent bounds checking"
        },
        {
          "rule": "DYNAMIC_INDEXING_BOUNDS",
          "line": 188,
          "message": "Dynamic array access 'phases[phase_idx]' without apparent bounds checking"
        }
      ],
      "fixes": [],
      "backends": {
        "naga": {
          "success": true,
          "skipped": true
        }
      }
    }
  ]
}