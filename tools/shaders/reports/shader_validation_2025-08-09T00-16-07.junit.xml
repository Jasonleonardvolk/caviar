<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="Shader Quality Gate" tests="17" failures="1" errors="0" time="1" timestamp="2025-08-09T00:16:07.615Z">
    <testcase name="frontend\lib\webgpu\shaders\avatarShader.wgsl" classname="ShaderValidation" time="0.1" />
    <testcase name="frontend\lib\webgpu\shaders\bitReversal.wgsl" classname="ShaderValidation" time="0.1" />
    <testcase name="frontend\lib\webgpu\shaders\butterflyStage.wgsl" classname="ShaderValidation" time="0.1" />
    <testcase name="frontend\lib\webgpu\shaders\fftShift.wgsl" classname="ShaderValidation" time="0.1" />
    <testcase name="frontend\lib\webgpu\shaders\hybridWavefieldBlend.wgsl" classname="ShaderValidation" time="0.1" />
    <testcase name="frontend\lib\webgpu\shaders\lenticularInterlace.wgsl" classname="ShaderValidation" time="0.1" />
    <testcase name="frontend\lib\webgpu\shaders\lightFieldComposer.wgsl" classname="ShaderValidation" time="0.1" />
    <testcase name="frontend\lib\webgpu\shaders\multiDepthWaveSynth.wgsl" classname="ShaderValidation" time="0.1" />
    <testcase name="frontend\lib\webgpu\shaders\multiViewSynthesis.wgsl" classname="ShaderValidation" time="0.1" />
    <testcase name="frontend\lib\webgpu\shaders\normalize.wgsl" classname="ShaderValidation" time="0.1" />
    <testcase name="frontend\lib\webgpu\shaders\phaseOcclusion.wgsl" classname="ShaderValidation" time="0.1" />
    <testcase name="frontend\lib\webgpu\shaders\propagation.wgsl" classname="ShaderValidation" time="0.1" />
    <testcase name="frontend\lib\webgpu\shaders\topologicalOverlay.wgsl" classname="ShaderValidation" time="0.1">
      <failure message="[ERROR naga::valid::expression] Left: FunctionArgument(0) of type Vector { size: Tri, scalar: Scalar { kind: Float, width: 4 } }
[ERROR naga::valid::expression] Right: AccessIndex { base: [14], index: 0 } of type Vector { size: Quad, scalar: Scalar { kind: Float, width: 4 } }
[0m[1m[38;5;9merror[0m[1m: Function [0] 'calculateChargeDensity' is invalid[0m
   [0m[36mâ”Œâ”€[0m .temp_topologicalOverlay.wgsl:56:1
   [0m[36mâ”‚[0m  
[0m[36m56[0m [0m[36mâ”‚[0m [0m[31mâ•­[0m [0m[31mfn calculateChargeDensity(worldPos: vec3<f32>) -> f32 {[0m
[0m[36m57[0m [0m[36mâ”‚[0m [0m[31mâ”‚[0m [0m[31m    var totalCharge = 0.0;[0m
[0m[36m58[0m [0m[36mâ”‚[0m [0m[31mâ”‚[0m [0m[31m    let count = min(chargeCount, 1000u); // Safety limit[0m
[0m[36m59[0m [0m[36mâ”‚[0m [0m[31mâ”‚[0m [0m[31m    [0m
   [0m[36mÂ·[0m [0m[31mâ”‚[0m
[0m[36m62[0m [0m[36mâ”‚[0m [0m[31mâ”‚[0m [0m[31m        let distance = length(worldPos - charge.position);[0m
   [0m[36mâ”‚[0m [0m[31mâ”‚[0m                               [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [0m[31mnaga::ir::Expression [16][0m
   [0m[36mÂ·[0m [0m[31mâ”‚[0m
[0m[36m72[0m [0m[36mâ”‚[0m [0m[31mâ”‚[0m [0m[31m    [0m
[0m[36m73[0m [0m[36mâ”‚[0m [0m[31mâ”‚[0m [0m[31m    return totalCharge;[0m
   [0m[36mâ”‚[0m [0m[31mâ•°[0m[0m[31mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€^ naga::ir::Function [0][0m
   [0m[36mâ”‚[0m  
   [0m[36m=[0m Expression [16] is invalid
   [0m[36m=[0m Operation Subtract can't work with [0] (of type Vector { size: Tri, scalar: Scalar { kind: Float, width: 4 } }) and [15] (of type Vector { size: Quad, scalar: Scalar { kind: Float, width: 4 } })

" type="NAGA_VALIDATION"><![CDATA[NAGA_VALIDATION: [ERROR naga::valid::expression] Left: FunctionArgument(0) of type Vector { size: Tri, scalar: Scalar { kind: Float, width: 4 } }
[ERROR naga::valid::expression] Right: AccessIndex { base: [14], index: 0 } of type Vector { size: Quad, scalar: Scalar { kind: Float, width: 4 } }
[0m[1m[38;5;9merror[0m[1m: Function [0] 'calculateChargeDensity' is invalid[0m
   [0m[36mâ”Œâ”€[0m .temp_topologicalOverlay.wgsl:56:1
   [0m[36mâ”‚[0m  
[0m[36m56[0m [0m[36mâ”‚[0m [0m[31mâ•­[0m [0m[31mfn calculateChargeDensity(worldPos: vec3<f32>) -> f32 {[0m
[0m[36m57[0m [0m[36mâ”‚[0m [0m[31mâ”‚[0m [0m[31m    var totalCharge = 0.0;[0m
[0m[36m58[0m [0m[36mâ”‚[0m [0m[31mâ”‚[0m [0m[31m    let count = min(chargeCount, 1000u); // Safety limit[0m
[0m[36m59[0m [0m[36mâ”‚[0m [0m[31mâ”‚[0m [0m[31m    [0m
   [0m[36mÂ·[0m [0m[31mâ”‚[0m
[0m[36m62[0m [0m[36mâ”‚[0m [0m[31mâ”‚[0m [0m[31m        let distance = length(worldPos - charge.position);[0m
   [0m[36mâ”‚[0m [0m[31mâ”‚[0m                               [0m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [0m[31mnaga::ir::Expression [16][0m
   [0m[36mÂ·[0m [0m[31mâ”‚[0m
[0m[36m72[0m [0m[36mâ”‚[0m [0m[31mâ”‚[0m [0m[31m    [0m
[0m[36m73[0m [0m[36mâ”‚[0m [0m[31mâ”‚[0m [0m[31m    return totalCharge;[0m
   [0m[36mâ”‚[0m [0m[31mâ•°[0m[0m[31mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€^ naga::ir::Function [0][0m
   [0m[36mâ”‚[0m  
   [0m[36m=[0m Expression [16] is invalid
   [0m[36m=[0m Operation Subtract can't work with [0] (of type Vector { size: Tri, scalar: Scalar { kind: Float, width: 4 } }) and [15] (of type Vector { size: Quad, scalar: Scalar { kind: Float, width: 4 } })

]]></failure>
    </testcase>
    <testcase name="frontend\lib\webgpu\shaders\transpose.wgsl" classname="ShaderValidation" time="0.1" />
    <testcase name="frontend\lib\webgpu\shaders\velocityField.wgsl" classname="ShaderValidation" time="0.1" />
    <testcase name="frontend\lib\webgpu\shaders\wavefieldEncoder.wgsl" classname="ShaderValidation" time="0.1" />
    <testcase name="frontend\lib\webgpu\shaders\wavefieldEncoder_optimized.wgsl" classname="ShaderValidation" time="0.1" />
  </testsuite>
</testsuites>
