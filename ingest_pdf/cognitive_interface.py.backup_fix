"""
Cognitive Interface for concept management
"""

__all__ = ['CognitiveInterface', 'add_concept_diff']

# Simple implementation of add_concept_diff
def add_concept_diff(concept_id: str, diff_data: dict):
    """Add a concept diff to the archive"""
    import json
    from pathlib import Path
    from datetime import datetime
    
    # Create diffs directory
    diffs_dir = Path(__file__).parent.parent / "data" / "concept_diffs"
    diffs_dir.mkdir(parents=True, exist_ok=True)
    
    # Create diff file
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    diff_file = diffs_dir / f"diff_{concept_id}_{timestamp}.json"
    
    diff_record = {
        "concept_id": concept_id,
        "timestamp": timestamp,
        "diff": diff_data
    }
    
    with open(diff_file, 'w', encoding='utf-8') as f:
        json.dump(diff_record, f, indent=2)
    
    return diff_file

class CognitiveInterface:
    """Interface for cognitive operations"""
    
    def __init__(self, psi_archive=None):
        self.psi_archive = psi_archive
        self._concepts = {}
    
    def add_concept(self, concept_id: str, data: dict):
        """Add a concept to the interface"""
        self._concepts[concept_id] = data
        # Also create a diff
        add_concept_diff(concept_id, data)
    
    def get_concept(self, concept_id: str):
        """Get a concept by ID"""
        return self._concepts.get(concept_id)
    
    def list_concepts(self):
        """List all concept IDs"""
        return list(self._concepts.keys())
